accelerator:
  displayName: TAP Supply Chain
  description: Boilerplate for generating a Tanzu Application Platform Supply Chain that takes a workload from
    source, builds and prepares it for deployment.
  iconUrl: https://avatars.githubusercontent.com/u/54452117?s=200&v=4
  tags:
  - tanzu
  - supply-chain

  options:

  - label: Workload Type
    description: The type of workload
    defaultValue: web
    name: workloadType
    inputType: text
    dataType: string
    required: true

  - label: Requires Tests
    description: "If set to true, a source tester stage will be generated"
    defaultValue: false
    name: hasTests
    inputType: checkbox
    dataType: boolean
    required: true

  - label: Requires Source Scan
    description: "If set to true, a source scan stage will be generated"
    defaultValue: false
    name: hasSourceScan
    inputType: checkbox
    dataType: boolean
    required: true

  - label: Build Tool
    description: The image build tool to use
    defaultValue: kpack
    name: buildTool
    inputType: select
    dataType: string
    required: true
    choices:
    - value: kpack
      text: Tanzu Build Service
    - value: kaniko
      text: Google Kaniko

  - label: Requires Image Scan
    description: "If set to true, an image scan stage will be generated"
    defaultValue: true
    name: hasImageScan
    inputType: checkbox
    dataType: boolean
    required: true

  - label: Deployment Model
    description: Use GitOps or RegistryOps to deploy applications
    defaultValue: "config-writer-and-pull-requester-template"
    name: configWriterTemplate
    inputType: select
    dataType: string
    required: true
    choices:
    - value: config-writer-and-pull-requester-template
      text: GitOps
    - value: config-writer-template
      text: RegistryOps

  - label: Deploy onto the same cluster
    description: Should we deploy to the same or an external cluster
    defaultValue: "deliverable-template"
    name: externalDeliveryTemplate
    inputType: select
    dataType: string
    required: true
    choices:
    - value: external-deliverable-template
      text: External Delivery
    - value: deliverable-template
      text: Standard Delivery

  imports:
  - name: tap-workload
     
engine:
  merge:
  - include: [ "**" ]
    exclude: [ "Makefile", "build-local.sh", "generated/**", "tests/**" ]

  - include: [ "README.md", "config/*.yaml" ]
    chain:
    - type: ReplaceText
      substitutions:
      - text: "source-test-scan-to-url"
        with: "#artifactId.toLowerCase()"
      - text: "configWriterTemplate"
        with: "#configWriterTemplate"
      - text: "externalDeliveryTemplate"
        with: "#externalDeliveryTemplate"
      - text: "workloadType"
        with: "#workloadType"
      - text: "buildTool"
        with: "#buildTool+'-template'"
    - merge:
      - type: InvokeFragment
        reference: tap-workload
      - include: [ "**" ]
      onConflict: UseFirst

    - include: [ "README.md", "config/*.yaml" ]
      condition: "!#hasTests"
      chain:
      - type: ReplaceText
        regex:
          pattern: "# StartTests[\\s\\S]+?# EndTests"
          with: "''"
      - type: ReplaceText
        regex:
          pattern: "# StartNoTests\\s|# EndNoTests\\s"
          with: "''"
    - include: [ "README.md", "config/*.yaml" ]
      condition: "#hasTests"
      chain:
      - type: ReplaceText
        regex:
          pattern: "# StartNoTests[\\s\\S]+?# EndNoTests"
          with: "''"
      - type: ReplaceText
        regex:
          pattern: "# StartTests\\s|# EndTests\\s"
          with: "''"

    - include: [ "README.md", "config/*.yaml" ]
      condition: "!#hasSourceScan"
      chain:
      - type: ReplaceText
        regex:
          pattern: "# StartSourceScan[\\s\\S]+?# EndSourceScan"
          with: "''"
      - type: ReplaceText
        regex:
          pattern: "# StartNoSourceScan\\s|# EndNoSourceScan\\s"
          with: "''"
    - include: [ "README.md", "config/*.yaml" ]
      condition: "#hasSourceScan"
      chain:
      - type: ReplaceText
        regex:
          pattern: "# StartNoSourceScan[\\s\\S]+?# EndNoSourceScan\\s"
          with: "''"
      - type: ReplaceText
        regex:
          pattern: "# StartSourceScan\\s|# EndSourceScan\\s"
          with: "''"

    - include: [ "README.md", "config/*.yaml" ]
      condition: "!#hasImageScan"
      chain:
      - type: ReplaceText
        regex:
          pattern: "# StartImageScan[\\s\\S]+?# EndImageScan"
          with: "''"
      - type: ReplaceText
        regex:
          pattern: "# StartNoImageScan\\s|# EndNoImageScan\\s"
          with: "''"
    - include: [ "README.md", "config/*.yaml" ]
      condition: "#hasImageScan"
      chain:
      - type: ReplaceText
        regex:
          pattern: "# StartNoImageScan[\\s\\S]+?# EndNoImageScan\\s"
          with: "''"
      - type: ReplaceText
        regex:
          pattern: "# StartImageScan\\s|# EndImageScan\\s"
          with: "''"

    - include: [ "README.md", "config/*.yaml" ]
      condition: "#configWriterTemplate == 'config-writer-template'"
      chain:
      - type: ReplaceText
        regex:
          pattern: "# StartGitOps[\\s\\S]+?# EndGitOps"
          with: "''"
      - type: ReplaceText
        regex:
          pattern: "# StartNoGitOps\\s|# EndNoGitOps\\s"
          with: "''"
    - include: [ "README.md", "config/*.yaml" ]
      condition: "#configWriterTemplate != 'config-writer-template'"
      chain:
      - type: ReplaceText
        regex:
          pattern: "# StartNoGitOps[\\s\\S]+?# EndNoGitOps\\s"
          with: "''"
      - type: ReplaceText
        regex:
          pattern: "# StartGitOps\\s|# EndGitOps\\s"
          with: "''"
